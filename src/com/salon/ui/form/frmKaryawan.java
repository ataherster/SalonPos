/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmKaryawan.java
 *
 * Created on 29 Agu 10, 15:50:43
 */

package com.salon.ui.form;

import com.salon.launcher.Main;
import com.salon.util.ButtonRenderer;
import com.salon.util.MyDefaultCellEditor;
import com.salon.util.MyStripRenderer;
import com.salon.util.formSystematization;
import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author User
 */
public class frmKaryawan extends javax.swing.JInternalFrame {

    /** Creates new form frmKaryawan */
    public frmKaryawan() {
        initComponents();
        initData();
    }
    PreviewLaporan laporan; 
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollTabelKaryawan = new javax.swing.JScrollPane();
        tabelKaryawan = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btnSetor = new javax.swing.JButton();
        btnTarik = new javax.swing.JButton();
        btnTransfer = new javax.swing.JButton();
        tbUpdate = new javax.swing.JToolBar();
        btnInput = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        mnFileKaryawan = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        mnInput = new javax.swing.JMenuItem();
        mnHapus = new javax.swing.JMenuItem();
        mnOpsi = new javax.swing.JMenu();
        mnLaporan = new javax.swing.JMenuItem();
        mnPendapatan = new javax.swing.JMenuItem();
        mnTransaksi = new javax.swing.JMenu();
        mnSetoranTunai = new javax.swing.JMenuItem();
        mnTarikanTunai = new javax.swing.JMenuItem();
        mnTransferDana = new javax.swing.JMenuItem();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        ScrollTabelKaryawan.setBackground(new java.awt.Color(204, 204, 204));

        tabelKaryawan.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        tabelKaryawan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelKaryawan.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabelKaryawan.setRowHeight(20);
        tabelKaryawan.getTableHeader().setReorderingAllowed(false);
        tabelKaryawan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelKaryawanKeyPressed(evt);
            }
        });
        ScrollTabelKaryawan.setViewportView(tabelKaryawan);

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/header.jpg"))); // NOI18N

        jToolBar1.setRollover(true);

        btnSetor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/11.png"))); // NOI18N
        btnSetor.setText("Setoran Tunai");
        btnSetor.setEnabled(false);
        btnSetor.setFocusable(false);
        btnSetor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSetor.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSetor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetorActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSetor);

        btnTarik.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/92.png"))); // NOI18N
        btnTarik.setText("Tarikan Tunai");
        btnTarik.setFocusable(false);
        btnTarik.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTarik.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTarik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTarikActionPerformed(evt);
            }
        });
        jToolBar1.add(btnTarik);

        btnTransfer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/89.png"))); // NOI18N
        btnTransfer.setText("Transfer Dana");
        btnTransfer.setEnabled(false);
        btnTransfer.setFocusable(false);
        btnTransfer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTransfer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransferActionPerformed(evt);
            }
        });
        jToolBar1.add(btnTransfer);

        tbUpdate.setRollover(true);

        btnInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/81.png"))); // NOI18N
        btnInput.setText("Input Biodata");
        btnInput.setFocusable(false);
        btnInput.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInput.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputActionPerformed(evt);
            }
        });
        tbUpdate.add(btnInput);

        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/12.png"))); // NOI18N
        btnHapus.setText("Hapus Biodata");
        btnHapus.setFocusable(false);
        btnHapus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHapus.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        tbUpdate.add(btnHapus);

        mnFileKaryawan.setBackground(new java.awt.Color(204, 204, 204));
        mnFileKaryawan.setForeground(new java.awt.Color(255, 255, 255));

        Menu.setBackground(new java.awt.Color(204, 204, 204));
        Menu.setText("File");

        mnInput.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        mnInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/81.png"))); // NOI18N
        mnInput.setText("Input Biodata");
        mnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnInputActionPerformed(evt);
            }
        });
        Menu.add(mnInput);

        mnHapus.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        mnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/12.png"))); // NOI18N
        mnHapus.setText("Hapus");
        mnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnHapusActionPerformed(evt);
            }
        });
        Menu.add(mnHapus);

        mnFileKaryawan.add(Menu);

        mnOpsi.setBackground(new java.awt.Color(204, 204, 204));
        mnOpsi.setText("Opsi");
        mnOpsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnOpsiActionPerformed(evt);
            }
        });

        mnLaporan.setText("Preview Laporan (Mutasi Keuangan)");
        mnLaporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnLaporanActionPerformed(evt);
            }
        });
        mnOpsi.add(mnLaporan);

        mnPendapatan.setText("Pendapatan Karyawan");
        mnPendapatan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnPendapatanActionPerformed(evt);
            }
        });
        mnOpsi.add(mnPendapatan);

        mnFileKaryawan.add(mnOpsi);

        mnTransaksi.setBackground(new java.awt.Color(204, 204, 204));
        mnTransaksi.setText("Transaksi");

        mnSetoranTunai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/10.png"))); // NOI18N
        mnSetoranTunai.setText("Setoran Tunai");
        mnSetoranTunai.setEnabled(false);
        mnSetoranTunai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSetoranTunaiActionPerformed(evt);
            }
        });
        mnTransaksi.add(mnSetoranTunai);

        mnTarikanTunai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/92.png"))); // NOI18N
        mnTarikanTunai.setText("Tarikan Tunai");
        mnTarikanTunai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnTarikanTunaiActionPerformed(evt);
            }
        });
        mnTransaksi.add(mnTarikanTunai);

        mnTransferDana.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/89.png"))); // NOI18N
        mnTransferDana.setText("Transfer Dana");
        mnTransferDana.setEnabled(false);
        mnTransferDana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnTransferDanaActionPerformed(evt);
            }
        });
        mnTransaksi.add(mnTransferDana);

        mnFileKaryawan.add(mnTransaksi);

        setJMenuBar(mnFileKaryawan);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ScrollTabelKaryawan)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScrollTabelKaryawan, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelKaryawanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelKaryawanKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_DELETE) {
            mnHapusActionPerformed(null);
        }
        formSystematization.nextfocus(evt);
}//GEN-LAST:event_tabelKaryawanKeyPressed

    private void btnSetorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetorActionPerformed
        mnSetoranTunaiActionPerformed(evt);
}//GEN-LAST:event_btnSetorActionPerformed

    private void btnTarikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTarikActionPerformed
        mnTarikanTunaiActionPerformed(evt);
}//GEN-LAST:event_btnTarikActionPerformed

    private void btnTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransferActionPerformed
        mnTransferDanaActionPerformed(evt);
}//GEN-LAST:event_btnTransferActionPerformed

    private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputActionPerformed
        mnInputActionPerformed(evt);
}//GEN-LAST:event_btnInputActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        mnHapusActionPerformed(evt);
}//GEN-LAST:event_btnHapusActionPerformed

    private void mnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnInputActionPerformed
        frmEntriKaryawan entriKaryawan = new frmEntriKaryawan(new Frame(), true);
        entriKaryawan.show();
        try {
            Select_Karyawan();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex, "Error : Select_Karyawan", JOptionPane.ERROR_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex, "Error : Select_Karyawan", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_mnInputActionPerformed

    private void mnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnHapusActionPerformed

        int result = JOptionPane.showConfirmDialog(this, "Peringatan!! Data akan dihapus secara permanen, anda yakin akan menghapus?",
                "Konfirmasi hapus Data", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result==JOptionPane.YES_OPTION) {
            try {
                Delete_Karyawan();
                Select_Karyawan();
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, ex, "Error : btnHapusActionPerformed", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, ex, "Error : btnHapusActionPerformed", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_mnHapusActionPerformed

    private void mnLaporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnLaporanActionPerformed

        if (laporan instanceof PreviewLaporan) {
            laporan.dispose();
        }
        laporan = new PreviewLaporan(new Frame(), false);
        laporan.chkPerusahaan.setEnabled(false);
        laporan.show();
}//GEN-LAST:event_mnLaporanActionPerformed

    private void mnPendapatanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnPendapatanActionPerformed
        myDialog d = new myDialog(null, false);
        d.setContentPane(new frmPendapatanKaryawan());
        d.pack();
        d.show();
}//GEN-LAST:event_mnPendapatanActionPerformed

    private void mnOpsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnOpsiActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_mnOpsiActionPerformed

    private void mnSetoranTunaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSetoranTunaiActionPerformed
        TransaksiTunai setor=new TransaksiTunai(new Frame(), true, "MASUK") {
            @Override
            void initData() throws SQLException {
                try {
                    stmTransaksi = Main.data.getActiveConnection().prepareStatement("SELECT SETORAN_TUNAI(?,?,?)");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex, "error : initData()", JOptionPane.ERROR_MESSAGE);
                }
            }

            @Override
            void ExecutePreparedStatement() throws SQLException {
                stmTransaksi.setObject(1, getId());
                stmTransaksi.setObject(2, txtJumlah.getValue());
                stmTransaksi.setObject(3, txtKeterangan.getText());
                stmTransaksi.execute();
            }
        };
        setor.setTitle("Setoran Tunai");
        setor.show();
}//GEN-LAST:event_mnSetoranTunaiActionPerformed

    private void mnTarikanTunaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnTarikanTunaiActionPerformed
        TransaksiTunai tarik = new TransaksiTunai(new Frame(), true, "KELUAR") {

            @Override
            void initData() throws SQLException {
                try {
                    stmTransaksi = Main.data.getActiveConnection().prepareStatement("SELECT TARIKAN_TUNAI(?,?,?)");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex, "error : initData()", JOptionPane.ERROR_MESSAGE);
                }
            }

            @Override
            void ExecutePreparedStatement() throws SQLException {
                super.ExecutePreparedStatement();
                stmTransaksi.setObject(1, getId());
                stmTransaksi.setObject(2, txtJumlah.getValue());
                stmTransaksi.setObject(3, txtKeterangan.getText());
                stmTransaksi.execute();
            }
        };
        tarik.setTitle("Tarikan Tunai");
        tarik.show();
}//GEN-LAST:event_mnTarikanTunaiActionPerformed

    private void mnTransferDanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnTransferDanaActionPerformed

}//GEN-LAST:event_mnTransferDanaActionPerformed

    String updateStatus="";

    Statement stmKaryawan;
    PreparedStatement stmInsertKaryawan;
    PreparedStatement stmUpdateKaryawan;
    PreparedStatement stmDeleteKaryawan;

    Statement stmGaji;

    ResultSet rs;
    ResultSet rsGaji;

    Statement stmGetData;
    ResultSet rsGetData;

    void initData (){

        tabelKaryawan.setAutoCreateRowSorter(true);
        try {
            stmKaryawan=Main.data.getActiveConnection().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            init_PreparedStatement();
            Select_Karyawan();
          } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Error : initData", JOptionPane.ERROR_MESSAGE);
        }

    }

    void init_PreparedStatement () throws SQLException {
        stmInsertKaryawan=Main.data.getActiveConnection().prepareStatement
                ("SELECT INSERT_KARYAWAN (?,?,?,?,?,?,?,?,?,?,?,?)");
        stmDeleteKaryawan=Main.data.getActiveConnection().prepareStatement
                ("SELECT DELETE_KARYAWAN (?)");
    }

    void Select_Karyawan () throws SQLException, Exception {
        rs=stmKaryawan.executeQuery("SELECT IDKARYAWAN AS ID, STATUSAKTIF, '-' as S, NAMAKARYAWAN, NAMAPENDEK, " +
                "PERSEN, TGLMASUK, TEMPATLAHIR, TGLLAHIR, ALAMAT, STATUSKAWIN, PENDIDIKAN, " +
                "USER FROM KARYAWAN() ORDER BY IDKARYAWAN");

        DefaultTableModel model = new DefaultTableModel() {

            Class[] type = new Class[] {
                Number.class, Boolean.class, Object.class, Object.class, Object.class, Float.class, Date.class, 
                Object.class, Date.class, Object.class, Object.class, Object.class, Object.class
            };

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return type [columnIndex];
            }

            @Override
            public void fireTableCellUpdated(int row, int column) {
                super.fireTableCellUpdated(row, column);
                if (tabelKaryawan.getValueAt(tabelKaryawan.getSelectedRow(), 0)!=null) {
                    String  sqlQuery="";
                    
                    switch (column) {
                        case 2:return;
                        default :
                            sqlQuery="UPDATE KARYAWAN SET " +
                                        tabelKaryawan.getColumnName(tabelKaryawan.getSelectedColumn()) + "=? " +
                                        "WHERE IDKARYAWAN=" + tabelKaryawan.getValueAt(tabelKaryawan.getSelectedRow(), 0);
                    }                

                    try {
                        
                        stmUpdateKaryawan = Main.data.getActiveConnection().prepareStatement(sqlQuery);
                        
                        if (tabelKaryawan.getSelectedColumn()==5 || tabelKaryawan.getSelectedColumn()==7) {
                            stmUpdateKaryawan.setObject(1, java.sql.Date.valueOf(tabelKaryawan.getValueAt(tabelKaryawan.getSelectedRow(), tabelKaryawan.getSelectedColumn()).toString()));
                        } else {
                            stmUpdateKaryawan.setObject(1, tabelKaryawan.getValueAt(tabelKaryawan.getSelectedRow(), tabelKaryawan.getSelectedColumn()));
                        }

                        System.out.println(stmUpdateKaryawan.executeUpdate());
                        

                        Select_Karyawan();
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        JOptionPane.showMessageDialog(null, ex, "Error : Update", JOptionPane.ERROR_MESSAGE);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        JOptionPane.showMessageDialog(null, ex, "Error : Update", JOptionPane.ERROR_MESSAGE);
                    }

                }
            };

        };

        Main.data.JTableFill(tabelKaryawan, rs, model);
        TableCellRenderer renderer = new MyStripRenderer(Color.BLACK, new Color(238,239,255));
        tabelKaryawan.setDefaultRenderer(Object.class, renderer);

        JDateChooser dcTgl = new JDateChooser();
        
        tabelKaryawan.getColumnModel().getColumn(6).setCellEditor(new MyDefaultCellEditor(dcTgl));
        tabelKaryawan.getColumnModel().getColumn(8).setCellEditor(new MyDefaultCellEditor(dcTgl));
        
        ButtonRenderer btnPersenStylish = new ButtonRenderer();
        btnPersenStylish.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                frmPersenStylish persenStylish = new frmPersenStylish(new Frame(), true);
                persenStylish.txtIdKaryawan.setText(tabelKaryawan.getValueAt(tabelKaryawan.getSelectedRow(), 0).toString());
                persenStylish.txtNamaKaryawan.setText(tabelKaryawan.getValueAt(tabelKaryawan.getSelectedRow(), 3).toString());
                persenStylish.show();
            }
        });
        
        tabelKaryawan.getColumnModel().getColumn(2).setCellRenderer(btnPersenStylish);
        tabelKaryawan.getColumnModel().getColumn(2).setCellEditor(new MyDefaultCellEditor(btnPersenStylish));
    }

    void Delete_Karyawan () throws SQLException {
        stmDeleteKaryawan.setObject(1, tabelKaryawan.getValueAt(tabelKaryawan.getSelectedRow(), 0));
        stmDeleteKaryawan.execute();
    }

    void Select_Gaji () throws SQLException {
        rsGaji=stmGaji.executeQuery("SELECT * FROM GAJI WHERE IDKARYAWAN=" + tabelKaryawan.getValueAt(tabelKaryawan.getSelectedRow(), 0));
    }

    void btnStatus (boolean status) {
        btnInput.setEnabled(status);
        mnInput.setEnabled(status);

        btnHapus.setEnabled(status);
        mnHapus.setEnabled(status);

    }

    Object getTotalPerawatan () throws SQLException {
        rsGetData=stmGetData.executeQuery(
                "SELECT COUNT(*) AS JUMLAH FROM DETAILTRANSAKSIPERAWATAN WHERE IDKARYAWAN=" + tabelKaryawan.getValueAt(tabelKaryawan.getSelectedRow(), 0));
        if (rsGetData.next()) {
            return rsGetData.getObject("JUMLAH");
        } else {
            return 0;
        }

    }

    Object getTotalPendapatan () throws SQLException {
        rsGetData=stmGetData.executeQuery(
                "SELECT SUM(KREDIT) AS KREDIT FROM MUTASIKEUANGAN WHERE IDKARYAWAN=" + tabelKaryawan.getValueAt(tabelKaryawan.getSelectedRow(), 0));
        if (rsGetData.next()) {
            return rsGetData.getObject("KREDIT");
        } else {
            return 0;
        }

    }

    Object getTotalPengeluaran () throws SQLException {
        rsGetData=stmGetData.executeQuery(
                "SELECT SUM(DEBET) AS DEBET FROM MUTASIKEUANGAN WHERE IDKARYAWAN=" + tabelKaryawan.getValueAt(tabelKaryawan.getSelectedRow(), 0));
        if (rsGetData.next()) {
            return rsGetData.getObject("DEBET");
        } else {
            return 0;
        }

    }

    Object getSaldoAccount () throws SQLException {
        rsGetData=stmGetData.executeQuery(
                "SELECT SALDOACCOUNT(" + tabelKaryawan.getValueAt(tabelKaryawan.getSelectedRow(), 0) + ")");
        if (rsGetData.next()) {
            return rsGetData.getObject("SALDOACCOUNT");
        } else {
            return 0;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Menu;
    private javax.swing.JScrollPane ScrollTabelKaryawan;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnInput;
    private javax.swing.JButton btnSetor;
    private javax.swing.JButton btnTarik;
    private javax.swing.JButton btnTransfer;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuBar mnFileKaryawan;
    private javax.swing.JMenuItem mnHapus;
    private javax.swing.JMenuItem mnInput;
    private javax.swing.JMenuItem mnLaporan;
    private javax.swing.JMenu mnOpsi;
    private javax.swing.JMenuItem mnPendapatan;
    private javax.swing.JMenuItem mnSetoranTunai;
    private javax.swing.JMenuItem mnTarikanTunai;
    private javax.swing.JMenu mnTransaksi;
    private javax.swing.JMenuItem mnTransferDana;
    private javax.swing.JTable tabelKaryawan;
    private javax.swing.JToolBar tbUpdate;
    // End of variables declaration//GEN-END:variables

}
