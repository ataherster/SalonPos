/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmEntriTransaksi.java
 *
 * Created on Jan 28, 2010, 12:10:04 PM
 */

package com.salon.ui.form;

import com.salon.launcher.Main;
import com.salon.setting.Setting;
import com.salon.util.*;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.*;
import java.util.HashMap;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.table.*;
import net.sf.jasperreports.engine.JRException;

/**
 *
 * @author User
 */
public class frmEntriTransaksi extends javax.swing.JDialog {

    Statement stmGetData;
    ResultSet rsGetData;
    
    Statement stmTransaksi;
    ResultSet rsTransaksi;

    PreparedStatement stmInsertTransaksiPerawatan;
    PreparedStatement stmUpdateDetailTransaksiPerawatan;
    PreparedStatement stmDeleteDetailTransaksiPerawatan;

    PreparedStatement stmUpdateTotal;
    
    Statement stmDetailTransaksiPerawatan;
    ResultSet rsDetailTransaksiPerawatan;

    PreparedStatement stmInsertPenjualan;
    PreparedStatement stmUpdateDetailPenjualan;
    PreparedStatement stmDeleteDetailPenjualan;
    ResultSet rsPenjualan;

    Statement stmDetailPenjualan;   
    ResultSet rsDetailPenjualan;

    private BigDecimal TotalHargaPerawatan;
    private BigDecimal JumlahBayarPerawatan;

    PreparedStatement stmBayar;
    PreparedStatement stmTambahPoint;
    
    BigDecimal NominalSatuPoin = null;
    BigDecimal poin = null;
    BigDecimal TotalTransaksiPerawatan = null;
                
    /** Creates new form frmEntriTransaksi */
    public frmEntriTransaksi(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();

        initData();
        formSystematization.CenterScreen(this);        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtHargaBayar = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        lblbayarperawatan1 = new javax.swing.JLabel();
        txtJumlahKembalian = new javax.swing.JFormattedTextField();
        lblbayarperawatan = new javax.swing.JLabel();
        txtJumlahBayar = new javax.swing.JFormattedTextField();
        chkCash = new javax.swing.JCheckBox();
        btnBayar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblWaktu = new javax.swing.JLabel();
        lblWaktu9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblWaktu10 = new javax.swing.JLabel();
        lblWaktu8 = new javax.swing.JLabel();
        txtNoAntrian = new javax.swing.JTextField();
        lblWaktu11 = new javax.swing.JLabel();
        txtTelp = new javax.swing.JTextField();
        txtIdTamu = new javax.swing.JTextField();
        txtNamaTamu = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelPerawatan = new javax.swing.JTable();
        lblWaktu6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelMakanan = new javax.swing.JTable();
        lblWaktu7 = new javax.swing.JLabel();
        btnKembali = new javax.swing.JButton();
        txtIdTransaksi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPoint = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMemId = new javax.swing.JTextField();
        lblPlusPoin = new javax.swing.JLabel();
        statusPanel2 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        lblWaktu13 = new javax.swing.JLabel();
        lblWaktu15 = new javax.swing.JLabel();
        lblWaktu16 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Transaksi Perawatan");

        txtHargaBayar.setEditable(false);
        txtHargaBayar.setForeground(new java.awt.Color(0, 0, 204));
        txtHargaBayar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtHargaBayar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtHargaBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHargaBayarActionPerformed(evt);
            }
        });
        txtHargaBayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHargaBayarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHargaBayarKeyReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 51, 255));
        jLabel14.setText("Total Transaksi");

        lblbayarperawatan1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblbayarperawatan1.setText("Jumlah Kembalian");

        txtJumlahKembalian.setEditable(false);
        txtJumlahKembalian.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtJumlahKembalian.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtJumlahKembalian.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                txtJumlahKembalianAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        txtJumlahKembalian.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtJumlahKembalianFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtJumlahKembalianFocusLost(evt);
            }
        });
        txtJumlahKembalian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJumlahKembalianActionPerformed(evt);
            }
        });
        txtJumlahKembalian.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtJumlahKembalianKeyPressed(evt);
            }
        });

        lblbayarperawatan.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblbayarperawatan.setForeground(new java.awt.Color(255, 0, 0));
        lblbayarperawatan.setText("Jumlah Tunai");

        txtJumlahBayar.setForeground(new java.awt.Color(255, 0, 51));
        txtJumlahBayar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtJumlahBayar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtJumlahBayar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtJumlahBayarFocusGained(evt);
            }
        });
        txtJumlahBayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtJumlahBayarKeyPressed(evt);
            }
        });

        chkCash.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        chkCash.setSelected(true);
        chkCash.setText("Cash");
        chkCash.setEnabled(false);

        btnBayar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBayar.setText("Bayar");
        btnBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBayarActionPerformed(evt);
            }
        });
        btnBayar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnBayarFocusGained(evt);
            }
        });
        btnBayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBayarKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("No. Transaksi :");

        lblWaktu.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWaktu.setText("-");

        lblWaktu9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWaktu9.setText("Nama Tamu :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Waktu :");

        lblWaktu10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWaktu10.setText("Telp / Hp :");

        lblWaktu8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWaktu8.setText("No. Antrian :");

        txtNoAntrian.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNoAntrianKeyPressed(evt);
            }
        });

        lblWaktu11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWaktu11.setText("Id Tamu :");

        txtTelp.setEditable(false);

        txtIdTamu.setEditable(false);

        txtNamaTamu.setEditable(false);

        tabelPerawatan.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        tabelPerawatan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelPerawatan.setRowHeight(20);
        tabelPerawatan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelPerawatanKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tabelPerawatan);

        lblWaktu6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWaktu6.setText("Daftar Perawatan - ");

        tabelMakanan.setAutoCreateRowSorter(true);
        tabelMakanan.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        tabelMakanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelMakanan.setRowHeight(20);
        tabelMakanan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelMakananKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tabelMakanan);

        lblWaktu7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWaktu7.setText("Daftar Pemesanan Makanan - ");

        btnKembali.setText("Kembali ke Form Transaksi");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });
        btnKembali.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnKembaliKeyPressed(evt);
            }
        });

        txtIdTransaksi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdTransaksiKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Member Point :");

        txtPoint.setEditable(false);
        txtPoint.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("No. Member :");

        txtMemId.setEditable(false);
        txtMemId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        lblPlusPoin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPlusPoin.setText("+");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
                    .addComponent(lblWaktu6)
                    .addComponent(lblWaktu7)
                    .addComponent(btnKembali, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHargaBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtJumlahKembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblbayarperawatan1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtJumlahBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblbayarperawatan)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(14, 14, 14)
                                                .addComponent(lblWaktu8))
                                            .addComponent(jLabel1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtIdTransaksi)
                                            .addComponent(txtNoAntrian, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(jLabel3)
                                        .addGap(6, 6, 6)
                                        .addComponent(lblWaktu)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                                        .addComponent(chkCash)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(lblWaktu11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtIdTamu, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblWaktu9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNamaTamu, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(lblWaktu10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTelp, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)))))
                        .addGap(240, 240, 240)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMemId, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPoint, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPlusPoin)
                .addGap(346, 346, 346))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtNoAntrian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblWaktu8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtIdTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(lblWaktu)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chkCash))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(lblWaktu11))
                                    .addComponent(txtIdTamu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(lblWaktu9))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(txtNamaTamu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(lblWaktu10))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(txtTelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblbayarperawatan)
                                    .addComponent(lblbayarperawatan1)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtJumlahBayar)
                                    .addComponent(txtHargaBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtJumlahKembalian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(btnBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblWaktu6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblWaktu7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnKembali))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtMemId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPlusPoin))))
                .addContainerGap())
        );

        statusPanel2.setOpaque(false);

        lblWaktu13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWaktu13.setText("ESC - Kembali");

        lblWaktu15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWaktu15.setText("F3 - Bayar");

        lblWaktu16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblWaktu16.setText("F5 - Edit Total Transaksi");

        javax.swing.GroupLayout statusPanel2Layout = new javax.swing.GroupLayout(statusPanel2);
        statusPanel2.setLayout(statusPanel2Layout);
        statusPanel2Layout.setHorizontalGroup(
            statusPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 855, Short.MAX_VALUE)
            .addGroup(statusPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblWaktu13)
                .addGap(35, 35, 35)
                .addComponent(lblWaktu15)
                .addGap(40, 40, 40)
                .addComponent(lblWaktu16)
                .addContainerGap(502, Short.MAX_VALUE))
        );
        statusPanel2Layout.setVerticalGroup(
            statusPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(statusPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWaktu13)
                    .addComponent(lblWaktu15)
                    .addComponent(lblWaktu16))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNoAntrianKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoAntrianKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            try {
                Select_TransaksiPerawatan();
            } catch (SQLException ex) {
                Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_TransaksiPerawatan()", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_TransaksiPerawatan()", JOptionPane.ERROR_MESSAGE);
            }
        }
        formKeyboardSortcut(evt);
}//GEN-LAST:event_txtNoAntrianKeyPressed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        dispose();
}//GEN-LAST:event_btnKembaliActionPerformed

    private void tabelPerawatanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelPerawatanKeyPressed
        formKeyboardSortcut(evt);
        if (evt.getKeyCode()==KeyEvent.VK_DELETE) {
            int result;
            result=JOptionPane.showConfirmDialog(rootPane, "Anda akan menghapus Data / Membatalkan Perawatan : " +
                    tabelPerawatan.getValueAt(tabelPerawatan.getSelectedRow(), 1) +
                    " dari Transaksi " + txtNamaTamu.getText() + " ??","Konfirmasi Hapus Data", JOptionPane.OK_CANCEL_OPTION);
            if (result==JOptionPane.OK_OPTION) {
                try {
                    Delete_DetailTransaksiPerawatan();
                    Select_DetailTransaksiPerawatan();
                } catch (SQLException ex) {
                    Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, ex, "Error : Delete_DetailTransaksiPerawatan()", JOptionPane.ERROR_MESSAGE);
                } catch (Exception ex) {
                    Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, ex, "Error : Delete_DetailTransaksiPerawatan()", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
}//GEN-LAST:event_tabelPerawatanKeyPressed

    private void tabelMakananKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelMakananKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_DELETE) {
            int result;
            result=JOptionPane.showConfirmDialog(rootPane, "Anda akan menghapus Data / Membatalkan Pemesanan makanan : '" +
                    tabelMakanan.getValueAt(tabelMakanan.getSelectedRow(), 1) +
                    "' dari Transaksi '" + txtNamaTamu.getText() + "' ??","Konfirmasi Hapus Data", JOptionPane.OK_CANCEL_OPTION);
            if (result==JOptionPane.OK_OPTION) {
                try {
                    Delete_DetailPenjualan();
                    Select_DetailPenjualan();
                } catch (SQLException ex) {
                    Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, ex, "Error : Delete_DetailPenjuaan()", JOptionPane.ERROR_MESSAGE);
                } catch (Exception ex) {
                    Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, ex, "Error : Delete_DetailPenjualan", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        formKeyboardSortcut(evt);
}//GEN-LAST:event_tabelMakananKeyPressed

    private void txtHargaBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHargaBayarActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtHargaBayarActionPerformed

    private void txtHargaBayarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHargaBayarKeyPressed
        formKeyboardSortcut(evt);
}//GEN-LAST:event_txtHargaBayarKeyPressed

    private void btnBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBayarActionPerformed
        if (chkCash.isSelected() & ((BigDecimal)txtJumlahKembalian.getValue()).intValueExact() < 0) {
            JOptionPane.showMessageDialog(rootPane, "Jumlah bayar tidak mencukupi jika memilih opsi cash", "err", JOptionPane.ERROR_MESSAGE);
        } else {

            try {
                BayarPerawatan();
                
                if (!txtMemId.getText().equals("")) {
                    stmTambahPoint=Main.data.getActiveConnection().prepareStatement("UPDATE MEMBER SET POIN=POIN+"
                        + poin.intValue() + " WHERE memid='" + txtMemId.getText() + "'");
                    stmTambahPoint.execute();
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, ex, "error : btnBayarActionPerformed)", JOptionPane.ERROR_MESSAGE);
                return;
            }            
                
            try {
                HashMap hm = new HashMap();
                String ReportFile = null;
                ReportFile = ReportAdministration.getReportFile() + "faktur_perawatan.jasper";
                hm.put("transaksiid", txtIdTransaksi.getText());
                hm.put("SUBREPORT_DIR", ReportAdministration.getReportFile());
            try {
                ReportAdministration.printReport(Main.data.getActiveConnection(), ReportFile, hm, 0, 0, false);
                
            } catch (JRException ex) {
                Logger.getLogger(PreviewLaporan.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, ex, "err : Preview", JOptionPane.ERROR_MESSAGE);
            }
                JOptionPane.showMessageDialog(rootPane, "Data Transaksi telah di simpan");
                dispose();
            } catch (Exception ex) {
                Logger.getLogger(frmBilling.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, ex, "error : btnBayarActionPerformed)", JOptionPane.ERROR_MESSAGE);
            }


        }
}//GEN-LAST:event_btnBayarActionPerformed

    private void btnBayarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnBayarFocusGained

    }//GEN-LAST:event_btnBayarFocusGained

    private void txtJumlahBayarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtJumlahBayarFocusGained
        
}//GEN-LAST:event_txtJumlahBayarFocusGained

    private void txtJumlahBayarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJumlahBayarKeyPressed
        /*if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            Robot r;
            try {
                r = new Robot();
                r.keyPress(KeyEvent.VK_ENTER);
            } catch (AWTException ex) {
                Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
            }

            
        }*/
        
        TotalHargaPerawatan = (BigDecimal)txtHargaBayar.getValue();
        JumlahBayarPerawatan = (BigDecimal)txtJumlahBayar.getValue();
        txtJumlahKembalian.setValue(JumlahBayarPerawatan.subtract(TotalHargaPerawatan));

        if (((BigDecimal)txtJumlahKembalian.getValue()).intValueExact()>0) {
            JumlahBayarPerawatan=JumlahBayarPerawatan.subtract((BigDecimal)txtJumlahKembalian.getValue());
        }
        formKeyboardSortcut(evt);
}//GEN-LAST:event_txtJumlahBayarKeyPressed

    private void txtJumlahKembalianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJumlahKembalianActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtJumlahKembalianActionPerformed

    private void txtJumlahKembalianFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtJumlahKembalianFocusGained
        
    }//GEN-LAST:event_txtJumlahKembalianFocusGained

    private void txtJumlahKembalianFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtJumlahKembalianFocusLost
        // TODO add your handling code here:
}//GEN-LAST:event_txtJumlahKembalianFocusLost

    private void txtJumlahKembalianAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_txtJumlahKembalianAncestorAdded
        // TODO add your handling code here:
}//GEN-LAST:event_txtJumlahKembalianAncestorAdded

    private void txtJumlahKembalianKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJumlahKembalianKeyPressed
        formSystematization.nextfocus(evt);
}//GEN-LAST:event_txtJumlahKembalianKeyPressed

    private void btnBayarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBayarKeyPressed
        formKeyboardSortcut(evt);
    }//GEN-LAST:event_btnBayarKeyPressed

    private void btnKembaliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnKembaliKeyPressed
        formKeyboardSortcut(evt);
    }//GEN-LAST:event_btnKembaliKeyPressed

    private void txtHargaBayarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHargaBayarKeyReleased
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            String result;

            result=JOptionPane.showInputDialog(rootPane, "Anda akan mengubah Total Transaksi menjadi 0, Jika anda yakin, Silahkan Ketik 'OK' di kotak bawah", "");

            if (result==null) return;
            
            if (result.toUpperCase().equals("OK")) {
                try {
                    stmUpdateTotal = Main.data.getActiveConnection().prepareStatement("UPDATE TRANSAKSIPERAWATAN SET " + "HARGABAYAR=? " + "WHERE IDTRANSAKSI=?");
                    stmUpdateTotal.setObject(1, txtHargaBayar.getValue());
                    stmUpdateTotal.setObject(2, txtIdTransaksi.getText());

                    stmUpdateTotal.execute();
                    txtNoAntrian.requestFocus();
                } catch (SQLException ex) {
                    Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, ex, "err : Update Total", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Konfirmasi tidak valid");
                txtHargaBayarKeyPressed(evt);
            }
            try {
                Select_DetailTransaksiPerawatan();
            } catch (SQLException ex) {
                Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, ex, "err : Update Total", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, ex, "err : Update Total", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtHargaBayarKeyReleased

    private void txtIdTransaksiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdTransaksiKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            try {
                Select_TransaksiPerawatan(txtIdTransaksi.getText());
            } catch (SQLException ex) {
                Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_TransaksiPerawatan()", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_TransaksiPerawatan()", JOptionPane.ERROR_MESSAGE);
            }
        }
        formKeyboardSortcut(evt);
    }//GEN-LAST:event_txtIdTransaksiKeyPressed
    public void initData () {
        try {
            stmTransaksi = Main.data.getActiveConnection().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            stmDetailTransaksiPerawatan = Main.data.getActiveConnection().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            stmDetailPenjualan = Main.data.getActiveConnection().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            stmGetData=Main.data.getActiveConnection().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            
            initPreparedStatement();
        } catch (SQLException ex) {
            Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, ex, "Error : initData", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void initPreparedStatement () throws SQLException {
        stmInsertTransaksiPerawatan=Main.data.getActiveConnection().prepareStatement("SELECT INSERT_TRANSAKSIPERAWATAN " +
                "(?,?,?,?,?)");
        stmDeleteDetailTransaksiPerawatan=Main.data.getActiveConnection().prepareStatement("DELETE FROM DETAILTRANSAKSIPERAWATAN " +
                "WHERE IDDETAILTRANSAKSI=?");

        stmInsertPenjualan=Main.data.getActiveConnection().prepareStatement("SELECT INSERT_PENJUALAN (?,?,?,?,?,?::INTEGER)");
        stmDeleteDetailPenjualan=Main.data.getActiveConnection().prepareStatement("DELETE FROM DETAILPENJUALAN " +
                "WHERE PENJUALANDETAILID=?");

        stmBayar=Main.data.getActiveConnection().prepareStatement("SELECT BAYARPERAWATAN (?,?::numeric,?)");

    }

    void Select_TransaksiPerawatan () throws SQLException, Exception {
        String sqlQuery;
        sqlQuery="SELECT IDTRANSAKSI, WAKTU, IDTAMU, NAMATAMU, TELP, HARGABAYAR, JUMLAHBAYAR, " +
                "HARGABAYAR-JUMLAHBAYAR AS SISA, CASH, IDTRANSAKSI, MEMID, POIN " +
                "FROM BUKUTAMU() LEFT JOIN TRANSAKSIPERAWATAN(" + Setting.CabangID + ") USING (IDTAMU) " +
                "LEFT JOIN MEMBER USING(MEMID) " + 
                "WHERE tglisi > now() - interval '360 days' AND (IDTAMU NOT IN (SELECT IDTAMU FROM TRANSAKSIPERAWATAN WHERE WAKTU > now() - interval '360 days') " +
                "OR HARGABAYAR > JUMLAHBAYAR) AND NOANTRIAN='" +  txtNoAntrian.getText() + "'";

        rsTransaksi=stmTransaksi.executeQuery(sqlQuery);

        rsTransaksi.last();

        if (rsTransaksi.getRow()>1) {
            throw new Exception("Terdapat lebih dari 1 data, proses tidak dapat dilanjutkan, harap hubungi administrator"); 
        } else if (rsTransaksi.getRow()==0) {
            throw new Exception("Tidak ada data yang di temukan");
        }

        if (rsTransaksi.getObject(1)==null) {
            txtIdTransaksi.setText(getTransaksiPerawatanID());
        } else {
            txtIdTransaksi.setText(rsTransaksi.getObject(1).toString());
            lblWaktu.setText(rsTransaksi.getObject(2).toString());
        }        
        txtIdTamu.setText(rsTransaksi.getObject(3).toString());
        txtNamaTamu.setText(rsTransaksi.getObject(4).toString());
        txtTelp.setText(rsTransaksi.getObject(5).toString());
        if (rsTransaksi.getObject(11)!=null) {
            txtMemId.setText(rsTransaksi.getObject(11).toString());
        } else {
            txtMemId.setText("");
        }
        if (rsTransaksi.getObject(12)!=null) {
            txtPoint.setText(rsTransaksi.getObject(12).toString());
        } else {
            txtPoint.setText("");
        }
            
        Select_DetailTransaksiPerawatan();
        Select_DetailPenjualan();

    }

    void Select_TransaksiPerawatan (String IdTransaksi) throws SQLException, Exception {
        rsTransaksi=stmTransaksi.executeQuery("SELECT IDTRANSAKSI, WAKTU, IDTAMU, NAMATAMU, TELP, HARGABAYAR, JUMLAHBAYAR, " +
                "HARGABAYAR-JUMLAHBAYAR AS SISA, CASH, IDTRANSAKSI " +
                "FROM BUKUTAMU() LEFT JOIN TRANSAKSIPERAWATAN(" + Setting.CabangID + ") USING (IDTAMU) " +
                "WHERE IDTRANSAKSI='" + IdTransaksi + "'");

        rsTransaksi.last();

        if (rsTransaksi.getRow()>1) {
            throw new Exception("Terdapat lebih dari 1 data, proses tidak dapat dilanjutkan, harap hubungi administrator");
        } else if (rsTransaksi.getRow()==0) {
            throw new Exception("Tidak ada data yang di temukan");
        }

        if (rsTransaksi.getObject(1)==null) {
            txtIdTransaksi.setText(getTransaksiPerawatanID());
        } else {
            txtIdTransaksi.setText(rsTransaksi.getObject(1).toString());
            lblWaktu.setText(rsTransaksi.getObject(2).toString());
        }
        txtIdTamu.setText(rsTransaksi.getObject(3).toString());
        txtNamaTamu.setText(rsTransaksi.getObject(4).toString());
        txtTelp.setText(rsTransaksi.getObject(5).toString());

        Select_DetailTransaksiPerawatan();
        Select_DetailPenjualan();

    }

    void Select_DetailTransaksiPerawatan () throws SQLException, Exception {
        rsDetailTransaksiPerawatan=stmDetailTransaksiPerawatan.executeQuery(
                "SELECT IDDETAILTRANSAKSI AS ID, NAMAPERAWATAN, '-' as S, DETAILTRANSAKSIPERAWATAN.HARGAPERAWATAN, " +
                "DETAILTRANSAKSIPERAWATAN.DISCOUNT::NUMERIC, " +
                "(DETAILTRANSAKSIPERAWATAN.HARGAPERAWATAN-(DETAILTRANSAKSIPERAWATAN.HARGAPERAWATAN*(DETAILTRANSAKSIPERAWATAN.DISCOUNT/100))) AS TOTAL, " +
                "NAMAPENDEK AS STYLISH, DETAILTRANSAKSIPERAWATAN.PERSENSTYLISH::NUMERIC " +
                "FROM DETAILTRANSAKSIPERAWATAN() " +
                "LEFT JOIN KARYAWAN() USING (IDKARYAWAN) " +
                "LEFT JOIN PERAWATAN() USING(KODEPERAWATAN) " +
                "WHERE IDTRANSAKSI='" + txtIdTransaksi.getText() + "'" +
                "ORDER BY ID");

        DefaultTableModel model = new DefaultTableModel() {

            @Override
            public void fireTableCellUpdated(int row, int column) {
                super.fireTableCellUpdated(row, column);
                if (tabelPerawatan.getValueAt(row, 0)==null && tabelPerawatan.getValueAt(row, 1)!=null) {
                    try {
                        Insert_TransaksiPerawatan();
                        Select_DetailTransaksiPerawatan();
                    } catch (SQLException ex) {
                        Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane, ex, "Error : Insert_TransaksiPerawatan", JOptionPane.ERROR_MESSAGE);
                    } catch (Exception ex) {
                        Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_DetailTransaksiPerawatan()", JOptionPane.ERROR_MESSAGE);
                    }
                } else if (tabelPerawatan.getValueAt(tabelPerawatan.getSelectedRow(), 0)!=null) {
                    String  sqlQuery="";
                    
                    switch (column) {
                        case 1 : 
                            // Mendapatkan KodePerawatan Berdasarkan NamaPerawatan dari tabel Perawatan
                            try {
                                rsGetData=stmGetData.executeQuery("SELECT KODEPERAWATAN FROM PERAWATAN WHERE NAMAPERAWATAN='" +
                                    tabelPerawatan.getValueAt(row, 1) + "'");
                                rsGetData.next();

                                sqlQuery="UPDATE DETAILTRANSAKSIPERAWATAN SET " +
                                    rsGetData.getMetaData().getColumnLabel(1) + "=" +
                                    rsGetData.getObject(1) + " " +
                                    "WHERE IDDETAILTRANSAKSI=" + tabelPerawatan.getValueAt(row, 0);
                            } catch (SQLException ex) {
                                Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                                JOptionPane.showMessageDialog(rootPane, ex, "Error : ", JOptionPane.ERROR_MESSAGE);
                            }

                            break;
                        case 2: return;
                        case 6 :
                            try {
                                // Mendapatkan IdKaryawan berdasarkan NamaPendek dari Karyawan
                                rsGetData=stmGetData.executeQuery("SELECT IDKARYAWAN, PERSEN FROM KARYAWAN WHERE NAMAPENDEK='" +
                                        tabelPerawatan.getValueAt(row, 6) + "'");
                                rsGetData.next();

                                sqlQuery="UPDATE DETAILTRANSAKSIPERAWATAN SET " +
                                    rsGetData.getMetaData().getColumnLabel(1) + "=" +
                                    rsGetData.getObject(1) + " " +
                                    "WHERE IDDETAILTRANSAKSI=" + tabelPerawatan.getValueAt(row, 0);
                            } catch (SQLException ex) {
                                Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                                JOptionPane.showMessageDialog(rootPane, ex, "Error : ", JOptionPane.ERROR_MESSAGE);
                            }
                            break;
                        default:
                            sqlQuery="UPDATE DETAILTRANSAKSIPERAWATAN SET " +
                                    tabelPerawatan.getColumnName(tabelPerawatan.getSelectedColumn()) + "=" +
                                    tabelPerawatan.getValueAt(row, column) + " " +
                                    "WHERE IDDETAILTRANSAKSI=" + tabelPerawatan.getValueAt(row, 0);
                    }

                    try {
                        stmUpdateDetailTransaksiPerawatan = Main.data.getActiveConnection().prepareStatement(sqlQuery);
                        stmUpdateDetailTransaksiPerawatan.execute();

                        Select_DetailTransaksiPerawatan();
                    } catch (SQLException ex) {
                        Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane, ex, "Error : Update", JOptionPane.ERROR_MESSAGE);
                    } catch (Exception ex) {
                        Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane, ex, "Error : Update", JOptionPane.ERROR_MESSAGE);
                    }

                }
            }          

            @Override
            public boolean isCellEditable(int row, int column) {
                switch (column) {
                    case 0:return false;
                    case 1:return false;
                    case 3:return false;
                    case 5:return false;
                    case 7:return false;
                    default: return true;
                }
                        
            }
            
            
        };

        Main.data.JTableFill(tabelPerawatan, rsDetailTransaksiPerawatan, model);
        
        // Menambahkan record kosong ke dalam JTable
        // untuk keperluan penambahan data otomatis saat pemilihan data di combobox
        DefaultTableModel m = (DefaultTableModel) tabelPerawatan.getModel();
        m.addRow(new Object[] {});
        
        tabelPerawatan.getColumnModel().getColumn(3).setCellRenderer(new NumberRenderer());
        tabelPerawatan.getColumnModel().getColumn(4).setCellRenderer(new NumberRenderer());
        tabelPerawatan.getColumnModel().getColumn(5).setCellRenderer(new NumberRenderer());
        
        tabelPerawatan.setDefaultRenderer(Object.class, new MyStripRenderer(Color.BLACK, new Color(238,239,255)));

        ButtonRenderer btnSelect = new ButtonRenderer();
        
        btnSelect.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                SelectData selectPerawatan = new SelectData(null, true) {
                    @Override
                    public void Select() {
                        super.Select();
                        tabelPerawatan.setValueAt(tabel.getValueAt(tabel.getSelectedRow(), 0), tabelPerawatan.getSelectedRow(), 1);
                        dispose();
                    }                    
                };

                selectPerawatan.setQuery("SELECT NAMAPERAWATAN AS PERAWATAN, HARGAPERAWATAN AS HARGA, DISCOUNT AS DISC " +
                        "FROM PERAWATAN ORDER BY NAMAPERAWATAN");
                selectPerawatan.LoadData();
                selectPerawatan.tabel.getColumnModel().getColumn(1).setCellRenderer(new NumberRenderer());
                selectPerawatan.tabel.getColumnModel().getColumn(2).setCellRenderer(new NumberRenderer());
                selectPerawatan.show();
            }
        });

        tabelPerawatan.getColumnModel().getColumn(2).setCellRenderer(btnSelect);
        tabelPerawatan.getColumnModel().getColumn(2).setCellEditor(new MyDefaultCellEditor(btnSelect));

        // Insert list nama karyawan ke dalam combobox
        // dan mengubah Editor nama Karyawan menjadi ComboBox Karyawan
        rsGetData = stmGetData.executeQuery("SELECT NAMAPENDEK FROM KARYAWAN "
                + "WHERE IDKARYAWAN NOT IN (SELECT DEFAULTACCOUNT()) AND STATUSAKTIF=TRUE");
        JComboBox cmbKaryawan = new JComboBox();
        cmbKaryawan.setFont(tabelPerawatan.getFont());
        Main.data.JComboFill(cmbKaryawan, rsGetData);
        tabelPerawatan.getColumnModel().getColumn(6).setCellEditor(new DefaultCellEditor(cmbKaryawan));

        txtHargaBayar.setValue(getTotalBayarPerawatan());
        txtJumlahBayar.setValue(getJumlahBayarPerawatan());
        
        // Hitung Point Member
        lblPlusPoin.setText("+ ");
        if (!txtMemId.getText().equals("") && !txtHargaBayar.getValue().equals(0)) {    
        
            String sqlQuery;
            sqlQuery="SELECT * FROM settings WHERE setid='PNT1'";
            rsGetData=stmGetData.executeQuery(sqlQuery);
            if (rsGetData.next()) {
                NominalSatuPoin=(BigDecimal) rsGetData.getObject("numvalues");
            }

            sqlQuery="SELECT SUM(TOTAL::NUMERIC) AS TOTAL FROM (SELECT HARGAPERAWATAN, DISCOUNT, "
                    + "HARGAPERAWATAN-(HARGAPERAWATAN*(DISCOUNT/100)) AS TOTAL "
                    + "FROM DETAILTRANSAKSIPERAWATAN WHERE IDTRANSAKSI='" + txtIdTransaksi.getText() + "') AS T";
            rsGetData=stmGetData.executeQuery(sqlQuery);
            if (rsGetData.next()) {
                TotalTransaksiPerawatan=(BigDecimal) rsGetData.getObject("total");
            }

            poin=TotalTransaksiPerawatan.divide(NominalSatuPoin);

            lblPlusPoin.setText("+ " + poin.intValue());
        }
        
    }

    /**
     * mendapatkan IdPerawatan dari Sequence PostgreSQL,
     * <p>Sequence Name :  <pre>transaksiperawatan_id_seq</pre>
     * @return String
     * @throws SQLException
     */
    String getTransaksiPerawatanID () throws SQLException {
        rsGetData=stmGetData.executeQuery("SELECT NEXTVAL('TRANSAKSIPERAWATAN_ID_SEQ'::REGCLASS)");
        rsGetData.next();
        return Setting.CabangID + "." + rsGetData.getObject("NEXTVAL");
    }

    void Insert_TransaksiPerawatan () throws SQLException {
        stmInsertTransaksiPerawatan.setObject(1, Setting.CabangID);
        stmInsertTransaksiPerawatan.setObject(2, txtIdTransaksi.getText()); // IdTransaksi
        stmInsertTransaksiPerawatan.setObject(3, txtIdTamu.getText()); // IdTamu

        // Mendapatkan KodePerawatan Berdasarkan NamaPerawatan dari tabel Perawatan
        rsGetData=stmGetData.executeQuery("SELECT KODEPERAWATAN FROM PERAWATAN WHERE NAMAPERAWATAN='" +
                tabelPerawatan.getValueAt(tabelPerawatan.getSelectedRow(), 1) + "'");
        rsGetData.next();

        stmInsertTransaksiPerawatan.setObject(4, rsGetData.getObject(1)); // Kode Perawatan
        stmInsertTransaksiPerawatan.setObject(5, tabelPerawatan.getValueAt(tabelPerawatan.getSelectedRow(), 6)); // Initial Karyawan

        stmInsertTransaksiPerawatan.execute();
    }

    void Delete_DetailTransaksiPerawatan () throws SQLException {
        stmDeleteDetailTransaksiPerawatan.setObject(1, tabelPerawatan.getValueAt(tabelPerawatan.getSelectedRow(), 0));

        stmDeleteDetailTransaksiPerawatan.execute();
    }

    void Select_DetailPenjualan () throws SQLException, Exception {
        rsDetailPenjualan=stmDetailPenjualan.executeQuery("SELECT PENJUALANDETAILID AS ID, NAMABARANG, HARGA, JUMLAH, DISCOUNT, " +
                "(HARGA*JUMLAH)-((HARGA*JUMLAH)*(DISCOUNT/100)) AS TOTAL " +
                "FROM DETAILPENJUALAN() INNER JOIN BARANG() USING(BARANGID) " +
                "WHERE PENJUALANID='" + txtIdTransaksi.getText() + "' " +
                "ORDER BY PENJUALANDETAILID");

        DefaultTableModel model = new DefaultTableModel() {

            @Override
            public void fireTableCellUpdated(int row, int column) {
                super.fireTableCellUpdated(row, column);
                if (tabelMakanan.getValueAt(tabelMakanan.getSelectedRow(), 0)==null && tabelMakanan.getValueAt(tabelMakanan.getSelectedRow(), 1)!=null) {
                    try {
                        Insert_Penjualan();
                        Select_DetailPenjualan();
                    } catch (SQLException ex) {
                        Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane, ex, "Error : Insert_Penjualan", JOptionPane.ERROR_MESSAGE);
                    } catch (Exception ex) {
                        Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_DetailPenjualan()", JOptionPane.ERROR_MESSAGE);
                    }
                } else if  (tabelMakanan.getValueAt(tabelMakanan.getSelectedRow(), 0)!=null) {
                    String  sqlQuery="";

                    switch (tabelMakanan.getSelectedColumn()) {
                        case 1 :
                            // Mendapatkan KodePerawatan Berdasarkan NamaPerawatan dari tabel Perawatan
                            try {
                                rsGetData=stmGetData.executeQuery("SELECT BARANGID FROM BARANG WHERE NAMABARANG='" +
                                    tabelMakanan.getValueAt(tabelMakanan.getSelectedRow(), 1) + "'");
                                rsGetData.next();

                                sqlQuery="UPDATE DETAILPENJUALAN SET " +
                                    rsGetData.getMetaData().getColumnLabel(1) + "='" +
                                    rsGetData.getObject(1) + "' " +
                                    "WHERE PENJUALANDETAILID=" + tabelMakanan.getValueAt(tabelMakanan.getSelectedRow(), 0);
                            } catch (SQLException ex) {
                                Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                                JOptionPane.showMessageDialog(rootPane, ex, "Error : ", JOptionPane.ERROR_MESSAGE);
                            }
                            break;
                        default :
                            sqlQuery="UPDATE DETAILPENJUALAN SET " +
                                tabelMakanan.getColumnName(column) + "=" +
                                tabelMakanan.getValueAt(row, column) + " " +
                                "WHERE PENJUALANDETAILID=" + tabelMakanan.getValueAt(row, 0);
                            break;
                    }                    

                    try {
                        stmUpdateDetailPenjualan = Main.data.getActiveConnection().prepareStatement(sqlQuery);
                        stmUpdateDetailPenjualan.execute();

                        Select_DetailPenjualan();
                    } catch (SQLException ex) {
                        Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane, ex, "Error : Update", JOptionPane.ERROR_MESSAGE);
                    } catch (Exception ex) {
                        Logger.getLogger(frmEntriTransaksi.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane, ex, "Error : Update", JOptionPane.ERROR_MESSAGE);
                    }

                }
            }
        };
        
        Main.data.JTableFill(tabelMakanan, rsDetailPenjualan, model);

        tabelMakanan.getColumnModel().getColumn(2).setCellRenderer(new NumberRenderer());
        tabelMakanan.getColumnModel().getColumn(3).setCellRenderer(new NumberRenderer());
        tabelMakanan.getColumnModel().getColumn(4).setCellRenderer(new NumberRenderer());
        tabelMakanan.getColumnModel().getColumn(5).setCellRenderer(new NumberRenderer());
        
        // Menambahkan record kosong ke dalam JTable
        // untuk keperluan penambahan data otomatis saat pemilihan data di combobox
        DefaultTableModel m = (DefaultTableModel) tabelMakanan.getModel();
        m.addRow(new Object[] {});

        TableCellRenderer renderer = new MyStripRenderer(Color.BLACK, new Color(238,239,255));
        tabelMakanan.setDefaultRenderer(Object.class, renderer);

        // Insert list nama nama barang ke dalam combobox
        // dan mengubah Editor namaBarang menjadi ComboBox
        rsGetData = stmGetData.executeQuery("SELECT NAMABARANG FROM BARANG");
        JComboBox cmbBarang = new JComboBox();
        cmbBarang.setFont(tabelMakanan.getFont());
        Main.data.JComboFill(cmbBarang, rsGetData);
        tabelMakanan.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(cmbBarang));

        txtHargaBayar.setValue(getTotalBayarPerawatan());
        txtJumlahBayar.setValue(getJumlahBayarPerawatan());
        
    }

    void Insert_Penjualan () throws SQLException {
        stmInsertPenjualan.setObject(1, Setting.CabangID);
        stmInsertPenjualan.setObject(2, txtIdTransaksi.getText());
        stmInsertPenjualan.setObject(3, txtIdTamu.getText());

        // Mendapatkan KodePerawatan Berdasarkan NamaPerawatan dari tabel Perawatan
        rsGetData=stmGetData.executeQuery("SELECT BARANGID FROM BARANG WHERE NAMABARANG='" +
                tabelMakanan.getValueAt(tabelMakanan.getSelectedRow(), 1) + "'");
        rsGetData.next();

        stmInsertPenjualan.setObject(4, rsGetData.getObject(1));
        
        stmInsertPenjualan.setObject(5, 1);
        stmInsertPenjualan.setObject(6, 0);

        stmInsertPenjualan.execute();

    }

    void Delete_DetailPenjualan () throws SQLException {
        stmDeleteDetailPenjualan.setObject(1, tabelMakanan.getValueAt(tabelMakanan.getSelectedRow(), 0));

        stmDeleteDetailPenjualan.execute();
    }

    void BayarPerawatan () throws SQLException {
        stmBayar.setObject(1, txtIdTransaksi.getText());
        stmBayar.setObject(2, JumlahBayarPerawatan);
        stmBayar.setObject(3, chkCash.isSelected());
        stmBayar.execute();
    }

    Object getTotalBayarPerawatan () throws SQLException {
        rsGetData=stmGetData.executeQuery("SELECT HARGABAYAR AS TOTALBAYAR FROM TRANSAKSIPERAWATAN" +
                " WHERE IDTRANSAKSI='" + txtIdTransaksi.getText() + "'");
        if (rsGetData.wasNull()) {
            return null;
        }

        if (rsGetData.next()) {
            return rsGetData.getObject("TOTALBAYAR");            
        } else {
            return new BigDecimal(0);
        }
    }

    Object getJumlahBayarPerawatan () throws SQLException {
        rsGetData=stmGetData.executeQuery("SELECT JUMLAHBAYAR FROM TRANSAKSIPERAWATAN" +
                " WHERE IDTRANSAKSI='" + txtIdTransaksi.getText() + "'");
        if (rsGetData.wasNull()) {
            return null;
        }
        
        if (rsGetData.next()) {
            return rsGetData.getObject("JUMLAHBAYAR");
        } else {
            return new BigDecimal(0);
        }
    }

    void formKeyboardSortcut (KeyEvent e) {
        switch (e.getKeyCode()) {
            case KeyEvent.VK_ESCAPE : dispose();
                break;
            case KeyEvent.VK_F3 :
                txtJumlahBayar.requestFocus();
                txtJumlahBayar.selectAll();
                break;
            case KeyEvent.VK_F5 :
                txtHargaBayar.requestFocus();
                txtHargaBayar.selectAll();
                break;
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBayar;
    private javax.swing.JButton btnKembali;
    private javax.swing.JCheckBox chkCash;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblPlusPoin;
    private javax.swing.JLabel lblWaktu;
    private javax.swing.JLabel lblWaktu10;
    private javax.swing.JLabel lblWaktu11;
    private javax.swing.JLabel lblWaktu13;
    private javax.swing.JLabel lblWaktu15;
    private javax.swing.JLabel lblWaktu16;
    private javax.swing.JLabel lblWaktu6;
    private javax.swing.JLabel lblWaktu7;
    private javax.swing.JLabel lblWaktu8;
    private javax.swing.JLabel lblWaktu9;
    private javax.swing.JLabel lblbayarperawatan;
    private javax.swing.JLabel lblbayarperawatan1;
    private javax.swing.JPanel statusPanel2;
    public javax.swing.JTable tabelMakanan;
    public javax.swing.JTable tabelPerawatan;
    private javax.swing.JFormattedTextField txtHargaBayar;
    public javax.swing.JTextField txtIdTamu;
    public javax.swing.JTextField txtIdTransaksi;
    private javax.swing.JFormattedTextField txtJumlahBayar;
    private javax.swing.JFormattedTextField txtJumlahKembalian;
    public javax.swing.JTextField txtMemId;
    public javax.swing.JTextField txtNamaTamu;
    public javax.swing.JTextField txtNoAntrian;
    public javax.swing.JTextField txtPoint;
    public javax.swing.JTextField txtTelp;
    // End of variables declaration//GEN-END:variables

}
