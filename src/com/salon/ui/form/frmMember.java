/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmKaryawan.java
 *
 * Created on 29 Agu 10, 15:50:43
 */

package com.salon.ui.form;

import com.salon.launcher.Main;
import com.salon.util.MyDefaultCellEditor;
import com.salon.util.MyStripRenderer;
import com.salon.util.formSystematization;
import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author User
 */
public class frmMember extends javax.swing.JInternalFrame {

    /** Creates new form frmKaryawan */
    public frmMember() {
        initComponents();
        initData();
    }
    PreviewLaporan laporan; 
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollTabelKaryawan = new javax.swing.JScrollPane();
        tabelMember = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        tbUpdate = new javax.swing.JToolBar();
        btnInput = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        mnFileKaryawan = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        mnInput = new javax.swing.JMenuItem();
        mnHapus = new javax.swing.JMenuItem();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        ScrollTabelKaryawan.setBackground(new java.awt.Color(204, 204, 204));

        tabelMember.setFont(new java.awt.Font("Courier New", 0, 13));
        tabelMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelMember.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabelMember.setRowHeight(20);
        tabelMember.getTableHeader().setReorderingAllowed(false);
        tabelMember.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelMemberKeyPressed(evt);
            }
        });
        ScrollTabelKaryawan.setViewportView(tabelMember);

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/header.jpg"))); // NOI18N

        jToolBar1.setRollover(true);

        tbUpdate.setRollover(true);

        btnInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/81.png"))); // NOI18N
        btnInput.setText("Input Biodata");
        btnInput.setFocusable(false);
        btnInput.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInput.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputActionPerformed(evt);
            }
        });
        tbUpdate.add(btnInput);

        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/12.png"))); // NOI18N
        btnHapus.setText("Hapus Biodata");
        btnHapus.setFocusable(false);
        btnHapus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHapus.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        tbUpdate.add(btnHapus);

        mnFileKaryawan.setBackground(new java.awt.Color(204, 204, 204));
        mnFileKaryawan.setForeground(new java.awt.Color(255, 255, 255));

        Menu.setBackground(new java.awt.Color(204, 204, 204));
        Menu.setText("File");

        mnInput.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        mnInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/81.png"))); // NOI18N
        mnInput.setText("Input Biodata");
        mnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnInputActionPerformed(evt);
            }
        });
        Menu.add(mnInput);

        mnHapus.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        mnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/12.png"))); // NOI18N
        mnHapus.setText("Hapus");
        mnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnHapusActionPerformed(evt);
            }
        });
        Menu.add(mnHapus);

        mnFileKaryawan.add(Menu);

        setJMenuBar(mnFileKaryawan);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 485, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollTabelKaryawan, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScrollTabelKaryawan, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelMemberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelMemberKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_DELETE) {
            mnHapusActionPerformed(null);
        }
        formSystematization.nextfocus(evt);
}//GEN-LAST:event_tabelMemberKeyPressed

    private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputActionPerformed
        mnInputActionPerformed(evt);
}//GEN-LAST:event_btnInputActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        mnHapusActionPerformed(evt);
}//GEN-LAST:event_btnHapusActionPerformed

    private void mnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnInputActionPerformed
        frmEntriMember entriMember = new frmEntriMember(new Frame(), true);
        entriMember.show();
        try {
            Select_Member();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex, "Error : Select_Member", JOptionPane.ERROR_MESSAGE);

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex, "Error : Select_Member", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_mnInputActionPerformed

    private void mnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnHapusActionPerformed

        int result = JOptionPane.showConfirmDialog(this, "Peringatan!! Data akan dihapus secara permanen, anda yakin akan menghapus?",
                "Konfirmasi hapus Data", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result==JOptionPane.YES_OPTION) {
            try {
                Delete_Karyawan();
                Select_Member();
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, ex, "Error : btnHapusActionPerformed", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, ex, "Error : btnHapusActionPerformed", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_mnHapusActionPerformed

    String updateStatus="";

    Statement stmMember;
    PreparedStatement stmUpdateMember;
    PreparedStatement stmDeleteMember;

    Statement stmGaji;

    ResultSet rs;
    ResultSet rsGaji;

    Statement stmGetData;
    ResultSet rsGetData;

    void initData (){

        tabelMember.setAutoCreateRowSorter(true);
        try {
            stmMember=Main.data.getActiveConnection().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            init_PreparedStatement();
            Select_Member();
          } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex, "Error : initData", JOptionPane.ERROR_MESSAGE);
        }

    }

    void init_PreparedStatement () throws SQLException {
        stmDeleteMember=Main.data.getActiveConnection().prepareStatement
                ("DELETE FROM MEMBER WHERE MEMID=?");
    }

    void Select_Member () throws SQLException, Exception {
        rs=stmMember.executeQuery("SELECT MEMID, NAMA, HP, TGLLAHIR, TGLMASUK, POIN "
                + "FROM MEMBER ORDER BY MEMID");

        DefaultTableModel model = new DefaultTableModel() {

            Class[] type = new Class[] {
                Number.class, String.class, String.class, Date.class, Date.class, Number.class
            };

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return type [columnIndex];
            }

            @Override
            public void fireTableCellUpdated(int row, int column) {
                super.fireTableCellUpdated(row, column);
                if (tabelMember.getValueAt(tabelMember.getSelectedRow(), 0)!=null) {
                    String  sqlQuery="";

                    sqlQuery="UPDATE MEMBER SET " +
                            tabelMember.getColumnName(tabelMember.getSelectedColumn()) + "=? " +
                            "WHERE MEMID='" + tabelMember.getValueAt(tabelMember.getSelectedRow(), 0) + "'";

                    try {
                        
                        stmUpdateMember = Main.data.getActiveConnection().prepareStatement(sqlQuery);
                        
                        if (tabelMember.getSelectedColumn()==4) {
                            stmUpdateMember.setObject(1, java.sql.Date.valueOf(tabelMember.getValueAt(tabelMember.getSelectedRow(), tabelMember.getSelectedColumn()).toString()));
                        } else {
                            stmUpdateMember.setObject(1, tabelMember.getValueAt(tabelMember.getSelectedRow(), tabelMember.getSelectedColumn()));
                        }

                        stmUpdateMember.execute();

                        Select_Member();
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                        JOptionPane.showMessageDialog(null, ex, "Error : Update", JOptionPane.ERROR_MESSAGE);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        JOptionPane.showMessageDialog(null, ex, "Error : Update", JOptionPane.ERROR_MESSAGE);
                    }

                }
            }

        };

        Main.data.JTableFill(tabelMember, rs, model);
        TableCellRenderer renderer = new MyStripRenderer(Color.BLACK, new Color(238,239,255));
        tabelMember.setDefaultRenderer(Object.class, renderer);

        
        
        JDateChooser dcTgl = new JDateChooser();       
        tabelMember.getColumnModel().getColumn(3).setCellEditor(new MyDefaultCellEditor(dcTgl));
        tabelMember.getColumnModel().getColumn(4).setCellEditor(new MyDefaultCellEditor(dcTgl));
    }

    void Delete_Karyawan () throws SQLException {
        stmDeleteMember.setObject(1, tabelMember.getValueAt(tabelMember.getSelectedRow(), 0));
        stmDeleteMember.execute();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Menu;
    private javax.swing.JScrollPane ScrollTabelKaryawan;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnInput;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuBar mnFileKaryawan;
    private javax.swing.JMenuItem mnHapus;
    private javax.swing.JMenuItem mnInput;
    private javax.swing.JTable tabelMember;
    private javax.swing.JToolBar tbUpdate;
    // End of variables declaration//GEN-END:variables

}
