/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmTransaksiPerawatan.java
 *
 * Created on Jan 26, 2010, 7:06:47 PM
 */

package com.salon.ui.form;

import com.salon.setting.Setting;
import com.salon.util.MyStripRenderer;
import com.salon.util.formSystematization;
import com.salon.launcher.Main;
import java.awt.Color;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author User
 */
public class frmTransaksiPerawatan extends javax.swing.JFrame {

    Statement stmGetData;
    ResultSet rsGetData;

    Object TamuID;
    Statement stmBukuTamu;
    PreparedStatement stmInsertBukuTamu;
    PreparedStatement stmUpdateBukuTamu;
    PreparedStatement stmDeleteBukuTamu;
    
    ResultSet rsBukuTamu;

    Statement stmTransaksiPerawatan;
    PreparedStatement stmInsertTransaksiPerawatan;
    ResultSet rsTransaksiPerawatan;

    Statement stmDetailTransaksiPerawatan;
    ResultSet rsDetailTransaksiPerawatan;


    String TransaksiPerawatanID;

    Statement stmPenjualanDetail;
    ResultSet rsPenjualanDetail;

    /** Creates new form frmTransaksiPerawatan */
    public frmTransaksiPerawatan() {
        addWindowListener(new WindowAdapter() {

            @Override
            public void windowOpened(WindowEvent e) {
                setExtendedState(MAXIMIZED_BOTH);
            }
            
        });
        initComponents();
        initData();

        formSystematization.CenterScreen(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelTamu = new javax.swing.JTable();
        btnTambahTamu = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelPerawatan = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelMakanan = new javax.swing.JTable();
        statusPanel = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        lblWaktu1 = new javax.swing.JLabel();
        lblWaktu2 = new javax.swing.JLabel();
        lblWaktu10 = new javax.swing.JLabel();
        lblWaktu11 = new javax.swing.JLabel();
        lblWaktu12 = new javax.swing.JLabel();
        btnPerawatan = new javax.swing.JButton();
        btnMakanan = new javax.swing.JButton();
        lblWaktu5 = new javax.swing.JLabel();
        lblWaktu6 = new javax.swing.JLabel();
        lblWaktu7 = new javax.swing.JLabel();
        lblWaktu9 = new javax.swing.JLabel();
        lblWaktu8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buku Tamu / Data Transaksi Perawatan");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        tabelTamu.setAutoCreateRowSorter(true);
        tabelTamu.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        tabelTamu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelTamu.setAutoscrolls(false);
        tabelTamu.setRowHeight(22);
        tabelTamu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelTamuMouseClicked(evt);
            }
        });
        tabelTamu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelTamuKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabelTamu);

        btnTambahTamu.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnTambahTamu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/37.png"))); // NOI18N
        btnTambahTamu.setText("Registrasi Tamu");
        btnTambahTamu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahTamuActionPerformed(evt);
            }
        });
        btnTambahTamu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnTambahTamuKeyPressed(evt);
            }
        });

        tabelPerawatan.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        tabelPerawatan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelPerawatan.setEnabled(false);
        tabelPerawatan.setRowHeight(22);
        tabelPerawatan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelPerawatanKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tabelPerawatan);

        tabelMakanan.setAutoCreateRowSorter(true);
        tabelMakanan.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        tabelMakanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelMakanan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelMakananKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tabelMakanan);

        statusPanel.setOpaque(false);

        lblWaktu1.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblWaktu1.setText("F1 - Registrasi Tamu");

        lblWaktu2.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblWaktu2.setText("F2 - Entri Perawatan / Pesan Makanan");

        lblWaktu10.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblWaktu10.setText("F9 - Kas Masuk");

        lblWaktu11.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblWaktu11.setText("F10 - Kas Keluar");

        lblWaktu12.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblWaktu12.setText("F12 - Update Info");

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 923, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblWaktu1)
                .addGap(37, 37, 37)
                .addComponent(lblWaktu2)
                .addGap(35, 35, 35)
                .addComponent(lblWaktu10)
                .addGap(40, 40, 40)
                .addComponent(lblWaktu11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 188, Short.MAX_VALUE)
                .addComponent(lblWaktu12)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWaktu2)
                            .addComponent(lblWaktu10)
                            .addComponent(lblWaktu11)
                            .addComponent(lblWaktu12))
                        .addContainerGap())
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblWaktu1)
                        .addContainerGap())))
        );

        btnPerawatan.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnPerawatan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/64.png"))); // NOI18N
        btnPerawatan.setText("Entri Perawatan");
        btnPerawatan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerawatanActionPerformed(evt);
            }
        });
        btnPerawatan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnPerawatanKeyPressed(evt);
            }
        });

        btnMakanan.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnMakanan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/83.png"))); // NOI18N
        btnMakanan.setText("Entri Makanan");
        btnMakanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakananActionPerformed(evt);
            }
        });
        btnMakanan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnMakananKeyPressed(evt);
            }
        });

        lblWaktu5.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblWaktu5.setText("Daftar Tamu - ");

        lblWaktu6.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblWaktu6.setText("Daftar Perawatan - ");

        lblWaktu7.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblWaktu7.setText("Daftar Pemesanan Makanan - ");

        lblWaktu9.setBackground(new java.awt.Color(102, 255, 51));
        lblWaktu9.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblWaktu9.setFocusable(false);
        lblWaktu9.setRequestFocusEnabled(false);

        lblWaktu8.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblWaktu8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/salon/images/bamboo-1280x800.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblWaktu5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTambahTamu, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblWaktu7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMakanan, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblWaktu6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPerawatan))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(lblWaktu9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 923, Short.MAX_VALUE)
            .addComponent(lblWaktu8, javax.swing.GroupLayout.PREFERRED_SIZE, 923, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblWaktu8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblWaktu9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPerawatan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWaktu6)
                    .addComponent(btnTambahTamu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWaktu5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMakanan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWaktu7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahTamuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahTamuActionPerformed

        frmRegistrasiTamu regis = new frmRegistrasiTamu(this, true) {
            @Override
            public void RegisTamu() {
                super.RegisTamu();
                try {
                    Insert_BukuTamu(txtIDMember.getText(), txtNamaTamu.getText() , txtTelp.getText(), txtNoAntrian.getText());
                    Select_BukuTamu();
                    dispose();
                } catch (SQLException ex) {
                    Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, ex, "Error : Insert_BukuTamu()", JOptionPane.ERROR_MESSAGE);
                } catch (Exception ex) {
                    Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_BukuTamu()", JOptionPane.ERROR_MESSAGE);
                }
            }

            @Override
            public Boolean FindMember() {
                try {
                    rsGetData=stmGetData.executeQuery("SELECT * FROM MEMBER WHERE MEMID='" + txtIDMember.getText() + "'");
                    if (rsGetData.next()) {
                        txtNamaTamu.setText(rsGetData.getString("NAMA"));
                        txtTelp.setText(rsGetData.getString("HP"));
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, ex, "Error : FindMember()", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                return true;
            }
            
            

        };
        regis.show();
        try {
            Select_BukuTamu();
        } catch (SQLException ex) {
            Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_BukuTamu()", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_BukuTamu()", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTambahTamuActionPerformed

    private void tabelTamuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelTamuKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_DELETE) {
            int result=JOptionPane.showConfirmDialog(rootPane, "anda yakin akan menghapus daftar tamu dengan id : " +
                    tabelTamu.getValueAt(tabelTamu.getSelectedRow(), 0)+ " ?","Konfrimasi Hapus Data", JOptionPane.YES_NO_OPTION);
            if (result==JOptionPane.YES_OPTION) {
                try {
                    Delete_BukuTamu();
                    Select_BukuTamu();
                } catch (SQLException ex) {
                    Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, ex, "Error : Delete", JOptionPane.ERROR_MESSAGE);
                } catch (Exception ex) {
                    Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_BukuTamu()", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        formKeyboardSortcut(evt);
    }//GEN-LAST:event_tabelTamuKeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        formKeyboardSortcut(evt);
    }//GEN-LAST:event_formKeyPressed

    private void tabelPerawatanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelPerawatanKeyPressed
        formKeyboardSortcut(evt);
    }//GEN-LAST:event_tabelPerawatanKeyPressed

    private void tabelMakananKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelMakananKeyPressed
        formKeyboardSortcut(evt);
    }//GEN-LAST:event_tabelMakananKeyPressed

    private void btnPerawatanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerawatanActionPerformed
        frmEntriTransaksi entri = new frmEntriTransaksi(this, true);
        entri.txtIdTransaksi.setEditable(false);
        entri.show();
        try {
            Select_BukuTamu();
        } catch (SQLException ex) {
            Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_BukuTamu()", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_BukuTamu()", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPerawatanActionPerformed

    private void btnMakananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakananActionPerformed
        btnPerawatanActionPerformed(evt);
    }//GEN-LAST:event_btnMakananActionPerformed

    private void btnTambahTamuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnTambahTamuKeyPressed
        formKeyboardSortcut(evt);
    }//GEN-LAST:event_btnTambahTamuKeyPressed

    private void btnMakananKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnMakananKeyPressed
        formKeyboardSortcut(evt);
    }//GEN-LAST:event_btnMakananKeyPressed

    private void btnPerawatanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnPerawatanKeyPressed
        formKeyboardSortcut(evt);
    }//GEN-LAST:event_btnPerawatanKeyPressed

    private void tabelTamuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelTamuMouseClicked
        try {
            Select_DetailTransaksiPerawatan();
            Select_PenjualanDetail();
        } catch (SQLException ex) {
            Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_DetailTransaksiPerawatan" , JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, ex, "Error : Select_DetailTransaksiPerawatan", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tabelTamuMouseClicked

    void initData () {
        try {
            stmBukuTamu = Main.data.getActiveConnection().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            stmTransaksiPerawatan=Main.data.getActiveConnection().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            stmDetailTransaksiPerawatan=Main.data.getActiveConnection().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            stmPenjualanDetail=Main.data.getActiveConnection().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);

            stmGetData=Main.data.getActiveConnection().createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);

            initPreparedStatement();
            Select_BukuTamu();
        } catch (SQLException ex) {
            Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, ex, "Error : initData", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, ex, "Error : initData", JOptionPane.ERROR_MESSAGE);
        }
    }

    void initPreparedStatement () {
        try {
            stmInsertBukuTamu = Main.data.getActiveConnection().prepareStatement("SELECT INSERT_BUKUTAMU (?,?,?,?,?,?)");
            stmUpdateBukuTamu = Main.data.getActiveConnection().prepareStatement("SELECT UPDATE_BUKUTAMU (?,?,?)");
            stmDeleteBukuTamu = Main.data.getActiveConnection().prepareStatement("DELETE FROM BUKUTAMU WHERE IDTAMU=?");

        } catch (SQLException ex) {
            Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, ex, "Error : initData", JOptionPane.ERROR_MESSAGE);
        }
    }

    void Select_BukuTamu () throws SQLException, Exception {
        rsBukuTamu=stmBukuTamu.executeQuery("SELECT IDTAMU, NAMATAMU, TELP, NOANTRIAN FROM BUKUTAMU(" + Setting.CabangID + ") " +
                "WHERE tglisi > now() - interval '360 days' AND (IDTAMU IN (SELECT IDTAMU FROM TRANSAKSIPERAWATAN WHERE (HARGABAYAR > JUMLAHBAYAR)) " +
                "OR IDTAMU NOT IN (SELECT IDTAMU FROM TRANSAKSIPERAWATAN WHERE waktu > now() - interval '360 days'))");
        
        DefaultTableModel model = new DefaultTableModel() {

            @Override
            public void fireTableCellUpdated(int row, int column) {
                super.fireTableCellUpdated(row, column);
                try {
                    if (tabelTamu.getSelectedColumn()==3) {

                        rsGetData = stmGetData.executeQuery("SELECT * FROM (SELECT IDTAMU, NAMATAMU, TELP, NOANTRIAN FROM BUKUTAMU(" +
                                Setting.CabangID + ") " + "WHERE IDTAMU NOT IN (SELECT IDTAMU FROM TRANSAKSIPERAWATAN) " +
                                "OR IDTAMU IN (SELECT IDTAMU FROM TRANSAKSIPERAWATAN WHERE HARGABAYAR > JUMLAHBAYAR))  AS BK " +
                                "WHERE NOANTRIAN='" + tabelTamu.getValueAt(row, 3) + "'");
                        if (rsGetData.next()) {
                            JOptionPane.showMessageDialog(rootPane, "No. antrian : " + tabelTamu.getValueAt(row, 3) +
                                    " sedang di pakai, silahkan pakai nomor yang lain");
                            try {
                                Select_BukuTamu();
                            } catch (Exception ex) {
                                Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
                                JOptionPane.showMessageDialog(rootPane, ex, "Error : Select", JOptionPane.ERROR_MESSAGE);
                            }
                            return;
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
                }


                String  sqlQuery="";

                    sqlQuery="UPDATE BUKUTAMU SET " +
                            tabelTamu.getColumnName(column) + "=? " +
                            "WHERE IDTAMU='" + tabelTamu.getValueAt(row, 0) + "'";

                try {

                    stmUpdateBukuTamu= Main.data.getActiveConnection().prepareStatement(sqlQuery);
                    stmUpdateBukuTamu.setObject(1, tabelTamu.getValueAt(row, column));

                    stmUpdateBukuTamu.execute();
                } catch (SQLException ex) {
                    Logger.getLogger(frmTransaksiPerawatan.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, ex, "Error : Update_BukuTamu()", JOptionPane.ERROR_MESSAGE);
                }
            }

        };

        Main.data.JTableFill(tabelTamu, rsBukuTamu, model);
        TableCellRenderer renderer = new MyStripRenderer(Color.BLACK, Color.WHITE, Color.BLACK, Color.WHITE, Color.BLACK, Color.WHITE);
        tabelTamu.setDefaultRenderer(Object.class, renderer);
        
        JTextField text = new JTextField();

        text.setFont(new Font("Courier New", 10, 9));
        tabelTamu.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(text));

    }

    String getTamuID () throws SQLException {
        rsGetData=stmGetData.executeQuery("SELECT NEXTVAL('BUKUTAMU_ID_SEQ'::REGCLASS)");
        rsGetData.next();
        return Setting.CabangID + "." + rsGetData.getObject("NEXTVAL");
    }

    void Insert_BukuTamu (String memid, String nm, String telp, String noant) throws SQLException {
        if (noant==null || noant=="") {
            JOptionPane.showMessageDialog(rootPane, "Silahkan lengkapi form pengisian, termasuk no antrian");
            return;
        }
        
        rsGetData = stmGetData.executeQuery("SELECT * FROM (SELECT IDTAMU, NAMATAMU, TELP, NOANTRIAN FROM BUKUTAMU(" + Setting.CabangID +  ") " +
                "WHERE tglisi > now() - interval '360 days' AND (IDTAMU NOT IN (SELECT IDTAMU FROM TRANSAKSIPERAWATAN WHERe waktu > now() - interval '360 days') " +
                "OR IDTAMU IN (SELECT IDTAMU FROM TRANSAKSIPERAWATAN WHERE HARGABAYAR > JUMLAHBAYAR)))  AS BK " +
                "WHERE NOANTRIAN='" + noant + "'");
        if (rsGetData.next()) {
            throw new SQLException("No. antrian : " + noant + " sedang di pakai, silahkan pakai nomor yang lain");
        }
        stmInsertBukuTamu.setObject(1, Setting.CabangID);
        stmInsertBukuTamu.setObject(2, getTamuID());
        stmInsertBukuTamu.setObject(3, nm);
        stmInsertBukuTamu.setObject(4, telp);
        stmInsertBukuTamu.setObject(5, noant);
        if (memid.equals("")) {
            stmInsertBukuTamu.setObject(6, null);
        } else {
            stmInsertBukuTamu.setObject(6, memid);
                    
        }

        stmInsertBukuTamu.execute();
    }

    void Insert_BukuTamu () throws SQLException {
        Insert_BukuTamu(null, "", "", "");
    }

    void Update_BukuTamu () throws SQLException {
        stmUpdateBukuTamu.setObject(1, tabelTamu.getValueAt(tabelTamu.getSelectedRow(), 0));
        stmUpdateBukuTamu.setObject(2, tabelTamu.getValueAt(tabelTamu.getSelectedRow(), 1));
        stmUpdateBukuTamu.setObject(3, tabelTamu.getValueAt(tabelTamu.getSelectedRow(), 2));

        stmUpdateBukuTamu.execute();
    }

    void Delete_BukuTamu () throws SQLException {
        stmDeleteBukuTamu.setObject(1, tabelTamu.getValueAt(tabelTamu.getSelectedRow(), 0));

        stmDeleteBukuTamu.execute();
    }

    void Select_TransaksiPerawatan () throws SQLException, Exception {
        rsTransaksiPerawatan=stmTransaksiPerawatan.executeQuery("SELECT WAKTU, NAMATAMU, TELP, HARGABAYAR, JUMLAHBAYAR, " +
                "HARGABAYAR-JUMLAHBAYAR AS SISA, CASH, IDTRANSAKSI, IDTAMU " +
                "FROM TRANSAKSIPERAWATAN(" + Setting.CabangID + ") INNER JOIN BUKUTAMU() USING (IDTAMU) " +
                "WHERE IDTAMU='" + tabelTamu.getValueAt(tabelTamu.getSelectedRow(), 0) + "'");


    }

    String getTransaksiPerawatanID () throws SQLException {
        rsTransaksiPerawatan=stmTransaksiPerawatan.executeQuery("SELECT NEXTVAL('TRANSAKSIPERAWATAN_ID_SEQ'::REGCLASS)");
        rsTransaksiPerawatan.next();
        return Setting.CabangID + "." + rsTransaksiPerawatan.getObject("NEXTVAL");
    }

    /*void Insert_TransaksiPerawatan () throws SQLException {
        stmInsertTransaksiPerawatan.setObject(1, Setting.CabangID);
        stmInsertTransaksiPerawatan.setObject(2, TransaksiPerawatanID);
        stmInsertTransaksiPerawatan.setObject(3, PerawatanTamuID);
        stmInsertTransaksiPerawatan.setObject(4, PerawatanID);
        stmInsertTransaksiPerawatan.setObject(5, txtPersen.getValue());
        stmInsertTransaksiPerawatan.setObject(6, KaryawanID);
        stmInsertTransaksiPerawatan.setObject(7, txtDiscount.getValue());

        stmInsertTransaksiPerawatan.execute();
    }*/
    
    void Select_DetailTransaksiPerawatan (JTable tabel) throws SQLException, Exception {
        rsDetailTransaksiPerawatan=stmDetailTransaksiPerawatan.executeQuery(
                "SELECT NAMAPERAWATAN AS PERAWATAN, DETAILTRANSAKSIPERAWATAN.HARGAPERAWATAN AS HARGA, " +
                "DETAILTRANSAKSIPERAWATAN.DISCOUNT AS DISC, " +
                "(DETAILTRANSAKSIPERAWATAN.HARGAPERAWATAN-(DETAILTRANSAKSIPERAWATAN.HARGAPERAWATAN*(DETAILTRANSAKSIPERAWATAN.DISCOUNT/100))) AS TOTAL, " +
                "NAMAKARYAWAN AS STYLISH, DETAILTRANSAKSIPERAWATAN.PERSENSTYLISH AS PERSEN " +
                "FROM DETAILTRANSAKSIPERAWATAN() " +
                "LEFT JOIN KARYAWAN() USING (IDKARYAWAN) " +
                "LEFT JOIN PERAWATAN() USING(KODEPERAWATAN) WHERE IDTRANSAKSI IN " +
                "(SELECT IDTRANSAKSI FROM TRANSAKSIPERAWATAN WHERE IDTAMU='" + 
                tabelTamu.getValueAt(tabelTamu.getSelectedRow(), 0) + "')");
        
        Main.data.JTableFill(tabel, rsDetailTransaksiPerawatan);
        TableCellRenderer renderer = new MyStripRenderer(Color.BLACK, new Color(238,239,255));
        tabel.setDefaultRenderer(Object.class, renderer);
    }

    void Select_DetailTransaksiPerawatan () throws SQLException, Exception {
        Select_DetailTransaksiPerawatan(tabelPerawatan);
    }

    void Select_PenjualanDetail () throws SQLException, Exception {
        rsPenjualanDetail=stmPenjualanDetail.executeQuery("SELECT NAMABARANG, HARGA, JUMLAH, DISCOUNT " +
                "FROM DETAILPENJUALAN() INNER JOIN BARANG() USING(BARANGID) " +
                "WHERE PENJUALANID  IN " +
                "(SELECT IDTRANSAKSI FROM TRANSAKSIPERAWATAN WHERE IDTAMU='" +
                tabelTamu.getValueAt(tabelTamu.getSelectedRow(), 0) + "')");
        
        Main.data.JTableFill(tabelMakanan, rsPenjualanDetail);
        TableCellRenderer renderer = new MyStripRenderer(Color.BLACK, new Color(238,239,255));
        tabelMakanan.setDefaultRenderer(Object.class, renderer);
    }

    void Setoran_Kas () {
        LoginForm verifikasiUser = new LoginForm(this, true){
            @Override
            public Boolean Login() {
                Boolean result=Main.data.verifikasiUser(txtUserName.getText(), txtPassword.getText());
                if (result.equals(true)) {
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Gagal memverifikasi user, silahkan mecoba lagi", "user validation failed", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                return true;
            }

            @Override
            public void Batal() {
                super.Batal();
                dispose();
            }
        };

        verifikasiUser.setTitle("Verifikasi User");

        verifikasiUser.txtUserName.setText(Main.data.getUserName());
        verifikasiUser.txtUserName.setEnabled(false);
        verifikasiUser.show();
        
        if (verifikasiUser.Login().equals(false)) {
            return;
        }

        TransaksiTunai setorkas = new TransaksiTunai(this, true, "MASUK") {
            @Override
            void initData () throws SQLException {
                try {
                    stmTransaksi = Main.data.getActiveConnection().prepareStatement("SELECT SETORAN_KAS(?,?)");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex, "error : initData()", JOptionPane.ERROR_MESSAGE);
                }
            }

            @Override
            void ExecutePreparedStatement () throws SQLException {
                stmTransaksi.setObject(1, txtJumlah.getValue());
                stmTransaksi.setObject(2, txtKeterangan.getText());
                stmTransaksi.execute();
            }
        };
        setorkas.setTitle("Setoran Kas");
        setorkas.txtIdKaryawan.setVisible(false);
        setorkas.txtNamaKaryawan.setVisible(false);
        setorkas.txtNamPendek.setVisible(false);

        setorkas.lblId.setVisible(false);
        setorkas.lblNama.setVisible(false);
        setorkas.lblNaPen.setVisible(false);
        setorkas.show();

    }

    void Pengeluaran () {
        LoginForm verifikasiUser = new LoginForm(this, true){
            @Override
            public Boolean Login() {
                Boolean result=Main.data.verifikasiUser(txtUserName.getText(), txtPassword.getText());
                if (result.equals(true)) {
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Gagal memverifikasi user, silahkan mecoba lagi", "user validation failed", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                return true;
            }

            @Override
            public void Batal() {
                super.Batal();
                dispose();
            }
        };

        verifikasiUser.setTitle("Verifikasi User");

        verifikasiUser.txtUserName.setText(Main.data.getUserName());
        verifikasiUser.txtUserName.setEnabled(false);
        verifikasiUser.show();
        
        if (verifikasiUser.Login().equals(false)) {
            return;
        }
        
        TransaksiTunai operasional = new TransaksiTunai(new Frame(), true, "KELUAR") {
                @Override
                void initData () throws SQLException {
                    try {
                        stmTransaksi = Main.data.getActiveConnection().prepareStatement("SELECT PENGELUARAN_OPERASIONAL(?,?)");
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(rootPane, ex, "error : initData()", JOptionPane.ERROR_MESSAGE);
                    }
                }

                @Override
                void ExecutePreparedStatement () throws SQLException {
                    stmTransaksi.setObject(1, txtJumlah.getValue());
                    stmTransaksi.setObject(2, txtKeterangan.getText());
                    stmTransaksi.execute();
                }
            };

            operasional.setTitle("Biaya Operasional");
            operasional.txtIdKaryawan.setVisible(false);
            operasional.txtNamaKaryawan.setVisible(false);
            operasional.txtNamPendek.setVisible(false);

            operasional.lblId.setVisible(false);
            operasional.lblNama.setVisible(false);
            operasional.lblNaPen.setVisible(false);

            operasional.show();
    }
    
    void formKeyboardSortcut (KeyEvent e) {
        switch (e.getKeyCode()) {
            case KeyEvent.VK_F1 : 
                btnTambahTamuActionPerformed(null); break;
            case KeyEvent.VK_F2 :
                btnPerawatanActionPerformed(null); break;
            case KeyEvent.VK_F3 :
                btnMakananActionPerformed(null); break;
            case KeyEvent.VK_F9 :
                Setoran_Kas(); break;
            case KeyEvent.VK_F10:
                Pengeluaran(); break;
            case KeyEvent.VK_F12:
                frmEditInfo info = new frmEditInfo(this, true);
                info.show();break;
                
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMakanan;
    private javax.swing.JButton btnPerawatan;
    private javax.swing.JButton btnTambahTamu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblWaktu1;
    private javax.swing.JLabel lblWaktu10;
    private javax.swing.JLabel lblWaktu11;
    private javax.swing.JLabel lblWaktu12;
    private javax.swing.JLabel lblWaktu2;
    private javax.swing.JLabel lblWaktu5;
    private javax.swing.JLabel lblWaktu6;
    private javax.swing.JLabel lblWaktu7;
    private javax.swing.JLabel lblWaktu8;
    private javax.swing.JLabel lblWaktu9;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JTable tabelMakanan;
    private javax.swing.JTable tabelPerawatan;
    private javax.swing.JTable tabelTamu;
    // End of variables declaration//GEN-END:variables


}
